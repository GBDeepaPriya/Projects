# -*- coding: utf-8 -*-
"""Climate Trend Analyzer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PXtEuLL_Wopx4-tc6N4sVOYuyzdO_d-D

**Climate Trend Analyzer**
"""

#pip install pandas numpy matplotlib seaborn scikit-learn plotly statsmodels

#pip install streamlit

"""*Dataset Collection*"""

import pandas as pd

df = pd.read_csv('Temperature.csv')
df.head()

df.info()

df.describe()

"""*Data Preprocessing & Cleaning*

Handle Missing Values
"""

df.isnull().sum()

# Drop if too many missing values
df = df.dropna(subset=['Temperature','Date'])

#Convert Date Column to Datetime Format
df['date'] = pd.to_datetime(df['Date'])
df = df.sort_values(by='date')

#Scale or Normalize Data
from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler()
df[['Temperature']] = scaler.fit_transform(df[['Temperature']])

#Handle Outliers
# Using IQR method
Q1 = df['Temperature'].quantile(0.25)
Q3 = df['Temperature'].quantile(0.75)
IQR = Q3 - Q1
df = df[(df['Temperature'] >= Q1 - 1.5 * IQR) & (df['Temperature'] <= Q3 + 1.5 * IQR)]

#Save Cleaned Data
df.to_csv('Cleaned_Climate_Data.csv', index=False)

"""*Exploratory Data Analysis (EDA) & Visualization*"""

#Summary Statistics
df.describe()
df['Temperature'].plot(kind='hist', title='Temperature Distribution')

#Time Series Line Plot (e.g., Global Temperature Over Time)
import matplotlib.pyplot as plt
plt.figure(figsize=(12,6))
plt.plot(df['date'], df['Temperature'], label='Global Temp')
plt.title('Global Temperature Over Time')
plt.xlabel('Date')
plt.ylabel('Temperature (°C)')
plt.legend()
plt.grid(True)
plt.show()

# Trendline with Rolling Mean (to smooth short-term noise)
df['Rolling_Avg'] = df['Temperature'].rolling(window=12).mean()
plt.figure(figsize=(12,6))
plt.plot(df['date'], df['Temperature'], alpha=0.5, label='Monthly Temp')
plt.plot(df['date'], df['Rolling_Avg'], color='red', label='Rolling Avg')
plt.title('Smoothed Global Temperature Trend')
plt.legend()
plt.show()

#Heatmap for Monthly Trends (if data has month/year columns)
import seaborn as sns
df['Hour'] = df['date'].dt.hour
df['Minute'] = df['date'].dt.minute
pivot = df.pivot_table(index='Minute', columns='Hour', values='Temperature')
plt.figure(figsize=(16, 8))
sns.heatmap(pivot, cmap='coolwarm', linewidths=0.1)
plt.title('Temperature Heatmap Over Time')
plt.show()

#Scatter Plot: CO₂ vs. Temperature (if multiple variables present)
plt.scatter(df['CO2'], df['Temperature'])
plt.title('CO₂ Levels vs Temperature')
plt.xlabel('CO₂ Concentration (ppm)')
plt.ylabel('Temperature (°C)')
plt.grid(True)
plt.show()







